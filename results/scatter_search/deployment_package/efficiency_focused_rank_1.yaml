description: "Maximiza throughput y asignaciones, optimiza utilizaci\xF3n de recursos"
dqn_hyperparameters:
  batch_size: 32
  dueling_network: false
  epsilon_decay: !!python/object/apply:numpy._core.multiarray.scalar
  - &id001 !!python/object/apply:numpy.dtype
    args:
    - f8
    - false
    - true
    state: !!python/tuple
    - 3
    - <
    - null
    - null
    - null
    - -1
    - -1
    - 0
  - !!binary |
    Mg6TXwnY7z8=
  epsilon_min: !!python/object/apply:numpy._core.multiarray.scalar
  - *id001
  - !!binary |
    agRuIICSsT8=
  epsilon_start: !!python/object/apply:numpy._core.multiarray.scalar
  - *id001
  - !!binary |
    wtYmbiHc2z8=
  gamma: !!python/object/apply:numpy._core.multiarray.scalar
  - *id001
  - !!binary |
    1Ow/SGTJ7j8=
  learning_rate: !!python/object/apply:numpy._core.multiarray.scalar
  - *id001
  - !!binary |
    ugjXnOM3bz8=
  memory_size: 5000
  target_update_freq: 200
metadata:
  archetype: efficiency_focused
  fitness: !!python/object/apply:numpy._core.multiarray.scalar
  - *id001
  - !!binary |
    NwEQtf45skA=
  generated_date: '2025-05-28T10:09:23.777652'
  optimization_method: scatter_search
  rank: 1
recommended_usage:
- "Flotas comerciales de alta rotaci\xF3n"
- "Estaciones de tr\xE1nsito r\xE1pido"
- "Operaciones log\xEDsticas"
reward_weights:
  energy_cost_weight: !!python/object/apply:numpy._core.multiarray.scalar
  - *id001
  - !!binary |
    KMWXqdokjz8=
  energy_satisfaction_weight: !!python/object/apply:numpy._core.multiarray.scalar
  - *id001
  - !!binary |
    Xsle+wSiEUA=
  penalty_skipped_vehicle: !!python/object/apply:numpy._core.multiarray.scalar
  - *id001
  - !!binary |
    9I9cIQgvX0A=
  reward_assigned_vehicle: !!python/object/apply:numpy._core.multiarray.scalar
  - *id001
  - !!binary |
    dhZj9246XEA=
